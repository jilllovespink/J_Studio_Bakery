generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model ArticleCategory {
  id        Int                 @id @default(autoincrement())
  name      String
  slug      String              @unique
  orderIndex Int
  subcategories ArticleSubCategory[]
  articles  Article[]
}

model ArticleSubCategory {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  orderIndex  Int
  categoryId  Int
  category    ArticleCategory @relation(fields: [categoryId], references: [id])
  articles    Article[]
}

model Article {
  id            Int      @id @default(autoincrement())
  title         String
  slug          String   @unique
  excerpt       String
  content       String   @db.Text
  coverImageUrl String?
  publishedAt   DateTime @default(now())
  categoryId    Int
  subCategoryId Int
  category      ArticleCategory @relation(fields: [categoryId], references: [id])
  subcategory   ArticleSubCategory @relation(fields: [subCategoryId], references: [id])
}

model addon_product {
  id       Int     @id @default(autoincrement())
  name     String
  price    Decimal @db.Decimal(10,2)
  imageUrl String? @db.VarChar(1000)
  status   Boolean @default(true)  // 上架/下架
  createdAt DateTime @default(now())
}

model banners {
  id         Int                @id @default(autoincrement())
  image      String             @db.VarChar(255)
  title      String             @db.VarChar(100)
  buttonText String?            @db.VarChar(50)
  buttonLink String?            @db.VarChar(255)
  created_at DateTime?          @default(now()) @db.Timestamp(0)
  fontColor  banners_fontColor? @default(light)
}

model course {
  id              Int            @id @default(autoincrement())
  title           String
  slug            String         @unique(map: "Course_slug_key")
  coverImage      String?
  description     String?        @db.Text
  price           Decimal        @db.Decimal(10, 2)
  capacity        Int            @default(16)
  status          Boolean        @default(true)
  startAt         DateTime?
  durationMinutes Int?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  courseintent    courseintent[]
}

model courseintent {
  id        Int      @id @default(autoincrement())
  courseId  Int
  name      String
  email     String
  phone     String
  message   String?  @db.VarChar(1000)
  createdAt DateTime @default(now())
  course    course   @relation(fields: [courseId], references: [id], onDelete: Cascade, map: "CourseIntent_courseId_fkey")

  @@index([courseId, createdAt], map: "CourseIntent_courseId_createdAt_idx")
}

model discount_code {
  id        Int      @id @default(autoincrement())
  code      String   @unique               // 折扣碼字串，例如 "WELCOME100"
  type      String                         // 折扣類型：percent / fixed
  value     Int                             // 折扣數值，例如 100 或 10 (%)
  isActive  Boolean  @default(true)        // 是否啟用
  expiresAt DateTime?                      // 過期時間，可選
  createdAt DateTime  @default(now())
}

model order {
  id             Int                  @id @default(autoincrement())
  orderNo        String               @unique(map: "Order_orderNo_key")
  buyerName      String
  email          String
  phone          String
  address        String
  shippingMethod order_shippingMethod
  subtotal       Decimal              @db.Decimal(10, 2)
  shippingFee    Decimal              @db.Decimal(10, 2)
  discount       Decimal              @default(0.00) @db.Decimal(10, 2)
  totalAmount    Decimal              @db.Decimal(10, 2)
  status         order_status         @default(PENDING)
  paymentMethod  order_paymentMethod  
  paymentInfo    Json?
  paidAt         DateTime?
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  orderitem      orderitem[]

  @@index([status, createdAt], map: "Order_status_createdAt_idx")
}

model orderitem {
  id             Int             @id @default(autoincrement())
  orderId        Int
  productId      Int
  variantId      Int?
  qty            Int
  unitPrice      Decimal         @db.Decimal(10, 2)
  addOnJson      Json?
  order          order           @relation(fields: [orderId], references: [id], onDelete: Cascade, map: "OrderItem_orderId_fkey")
  product        product         @relation(fields: [productId], references: [id], map: "OrderItem_productId_fkey")
  productvariant productvariant? @relation(fields: [variantId], references: [id], map: "OrderItem_variantId_fkey")

  @@index([orderId], map: "OrderItem_orderId_idx")
  @@index([productId], map: "OrderItem_productId_idx")
  @@index([variantId], map: "OrderItem_variantId_idx")
}

model product {
  id             Int                  @id @default(autoincrement())
  name           String
  slug           String               @unique(map: "Product_slug_key")
  category       product_category     @relation(fields: [categoryId], references: [id])
  categoryId     Int
  subcategory    product_subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId  Int?

  description    String?              @db.Text
  heroImage      String?              @db.VarChar(10000)
  status         Boolean              @default(true)
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  orderitem      orderitem[]
  productvariant productvariant[]
  isHot          Boolean              @default(false)
  ingredients    String?
  shelfLife      String?
  flavorProfile  String?

  @@index([status, categoryId], map: "Product_status_category_idx")
}

model product_category {
  id          Int                 @id @default(autoincrement())
  name        String              @unique                // 大分類名稱 (例: 經典蛋糕)
  slug        String              @unique                // 路由用 (classic-cakes)
  description String?             @db.Text               // 顯示在 banner 的文字
  orderIndex  Int?                                       // 排序用
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  // Relation
  products    product[]           // 一個大分類底下有很多產品
  subcategories product_subcategory[]
}

model product_subcategory {
  id          Int              @id @default(autoincrement())
  category    product_category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  name        String
  slug        String           @unique     // 用來當錨點 scroll 的定位
  orderIndex  Int?                          // 排序用
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  // Relation
  products    product[]
}


model productvariant {
  id          Int         @id @default(autoincrement())
  productId   Int
  variantName String
  price       Decimal     @db.Decimal(10, 2)
  isDefault   Boolean     @default(false)
  orderitem   orderitem[]
  product     product     @relation(fields: [productId], references: [id], onDelete: Cascade, map: "ProductVariant_productId_fkey")

  @@index([isDefault], map: "ProductVariant_isDefault_idx")
  @@index([productId], map: "ProductVariant_productId_idx")
}

model news {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  image     String?  @db.VarChar(255)
  date      DateTime
  createdAt DateTime @default(now())
}

enum order_shippingMethod {
  home
  pickup
}

enum order_status {
  PENDING
  PAID
  FAILED
  CANCELLED
}

enum order_paymentMethod {
  ECPAY_CREDIT
  TAPPAY_CREDIT
  CASH
  }

enum banners_fontColor {
  light
  dark
}


